own_half = possessionteam == fieldposition) %>%
group_by(gameid, playid, team) %>%
summarise(mean_x = mean(x),
mean_y = mean(y),
mean_s = mean(s),
mean_a = mean(a),
mean_dis = mean(dis),
mean_orientation = mean(orientation),
mean_dir = mean(dir),
down = min(down),
distance =  min(distance),
homescorebeforeplay = min(homescorebeforeplay),
visitorscorebeforeplay = min(visitorscorebeforeplay),
own_half = min(own_half),
defendersinthebox = min(defendersinthebox),
mean_weight = mean(playerweight),
week  = min(week),
temperature = min(temperature),
windspeed = min(windspeed),
humidity = min(humidity))
warnings()
colnames(nfl_play_raw)
for (col in colnames(nfl_play_raw)) {
print(col)
}
nfl_play_raw[game_id]
nfl_play_raw['game_id']
nfl_play_raw['game_id']
nfl_play_raw[1]
str_detect(nfl_play_raw[1], 'A-z')
grep('[A-z]', nfl_play_raw[1])
grepl('[A-Za-z]+$', nfl_play_raw[1])
nfl_play_raw[, 'playid']
nfl_play_raw[ ,'playid'] <- as.numeric()
summary(nfl_play_raw)
# Tidy columns into numerics where they don't contain any characters
for (col in colnames(nfl_play_raw)) {
}
# Load data into memory
nfl_play_raw <- dbGetQuery(conn, "select * from nfl_data")
# Tidy columns into numerics where they don't contain any characters
for (col in colnames(nfl_play_raw)) {
if (grepl('[A-Za-z]+$', nfl_play_raw[, col]) == FALSE) {
nfl_play_raw[, col] <- as.numeric()
}
}
warnings()
?all
all(grepl('[A-Za-z]+$', nfl_play_raw[, 'play_id']))
all(grepl('[A-Za-z]+$', nfl_play_raw[, 'playid']))
# Load data into memory
nfl_play_raw <- dbGetQuery(conn, "select * from nfl_data")
# Tidy columns into numerics where they don't contain any characters
for (col in colnames(nfl_play_raw)) {
if (all(grepl('[A-Za-z]+$', nfl_play_raw[, col])) == FALSE) {
nfl_play_raw[, col] <- as.numeric()
}
}
summary(nfl_play_raw)
mean(nfl_play_raw$x)
nfl_play_data$x
nfl_play_raw$x
# Load data into memory
nfl_play_raw <- dbGetQuery(conn, "select * from nfl_data")
nfl_play_raw$x
as.numeric(nfl_play_raw$x)
all(as.numeric(nfl_play_raw$x))
type(nfl_play_raw[, playid])
typeof(nfl_play_raw[, playid])
typeof(nfl_play_raw[, 'playid'])
typeof(nfl_play_raw[, 'playid']) <- as.numeric()
typeof(nfl_play_raw[, 'playid'])
class(nfl_play_raw[, 'playid'])
class(nfl_play_raw[, 'playid']) <- 'numeric'
summary(nfl_play_raw)
# Load data into memory
nfl_play_raw <- dbGetQuery(conn, "select * from nfl_data")
# Tidy columns into numerics where they don't contain any characters
for (col in colnames(nfl_play_raw)) {
if (all(grepl('[A-Za-z]+$', nfl_play_raw[, col])) == FALSE) {
class(nfl_play_raw[, col]) <- 'numeric'
} else {
nfl_play_raw[, col]
}
}
warnings()
summary(nfl_play_raw)
nfl_play_raw$temperature
nfl_play_raw %>%
View()
nfl_play_raw <- dbGetQuery(conn, "select * from nfl_data")
# Tidy columns into numerics where they don't contain any characters
for (col in colnames(nfl_play_raw)) {
if (all(grepl('[A-Za-z]+$', nfl_play_raw[, col])) == FALSE) {
class(nfl_play_raw[, col]) <- 'numeric'
}
}
# Load data into memory
nfl_play_raw <- dbGetQuery(conn, "select * from nfl_data")
grepl('[A-Za-z]+$', nfl_play_raw[, 'displayname'])
any(grepl('[A-Za-z]+$', nfl_play_raw[, 'displayname']))
any(grepl('[A-Za-z]+$', nfl_play_raw[, 'playid']))
# Load data into memory
nfl_play_raw <- dbGetQuery(conn, "select * from nfl_data")
# Tidy columns into numerics where they don't contain any characters
for (col in colnames(nfl_play_raw)) {
if (any(grepl('[A-Za-z]+$', nfl_play_raw[, col])) == FALSE) {
class(nfl_play_raw[, col]) <- 'numeric'
}
}
summary(nfl_play_raw)
colnames(nfl_data_raw)
# Load data into memory
nfl_play_raw <- dbGetQuery(conn, "select * from nfl_data")
colnames(nfl_data_raw)
colnames(nfl_play_raw)
#player height,
#player birthdate,
#defenders in the box
# game clock
readr::col_guess(nfl_play_raw)
map(col_guess, nfl_play_raw)
map(nfl_play_raw, col_guess)
map(nfl_play_raw, col_guess())
?dbGetQuery
nfl_play_raw %>%
select(playerheight, playerweight, gameclock)
nfl_play_raw %>%
mutate(separate(playerheight, sep='-'))
separate(nfl_play_raw, playerheight)
separate(nfl_play_raw, c('feet','inches'), playerheight)
?separate
separate(nfl_play_raw,playerheight, c('feet','inches'), sep='-')
nfl_play_raw %>%
select(playerheight) %>%
mutate(separate(playerheight, sep='-'))
nfl_play_raw %>%
select(playerheight) %>%
mutate(separate(playerheight, into = c('feet','inches'), sep='-'))
separate(nfl_play_raw,playerheight, c('feet','inches'), sep='-')
nfl_play_raw %>%
select(playerheight) %>%
mutate(separate(col=playerheight, into = c('feet','inches'), sep='-'))
nfl_play_raw %>%
select(playerheight) %>%
mutate(separate(col=playerheight, into = c('feet','inches'), sep='-'))
nfl_play_raw %>%
mutate(separate(col=playerheight, into = c('feet','inches'), sep='-'))
nfl_play_raw %>%
mutate(separate(nfl_play_raw, col=playerheight, into = c('feet','inches'), sep='-'))
str_split(playerheight, '*-*')
nfl_play_raw %>%
mutate(str_split(playerheight, '*-*'))
?str_split
nfl_play_raw %>%
str_split(playerheight, '*-*')
str_split(nfl_play_raw, playerheight, '*-*')
str_split(nfl_play_raw$playerheight, '*-*')
str_split(nfl_play_raw$playerheight, '-')
unlist(str_split(nfl_play_raw$playerheight, '-'))
str_split(nfl_play_raw$playerheight, '-')
?extract
nfl_play_raw %>%
extract(playerheight, c('feet','inches'), '*-')
nfl_play_raw %>%
extract(playerheight, c('feet','inches'), '-')
nfl_play_raw %>%
separate(playerheight, c('feet','inches'), '-')
nfl_play_raw %>%
separate(playerheight, c('feet','inches'), '-') %>%
View()
nfl_play_raw %>%
separate(playerheight, c('feet','inches'), '-') %>%
mutate(playerheight = (feet*30.5) + (inches*2.5))
nfl_play_raw %>%
separate(playerheight, c('feet','inches'), '-', convert = T) %>%
mutate(playerheight = (feet*30.5) + (inches*2.5))
nfl_play_raw %>%
separate(playerheight, c('feet','inches'), '-', convert = T) %>%
mutate(playerheight_cm = (feet*30.5) + (inches*2.5))
library(lubridate)
today()
nfl_play_raw %>%
separate(playerheight, c('feet','inches'), '-', convert = T) %>%
mutate(playerheight_cm = (feet*30.5) + (inches*2.5),
player_age = today() - mdy(playerbirthdate) )
nfl_play_raw %>%
separate(playerheight, c('feet','inches'), '-', convert = T) %>%
mutate(playerheight_cm = (feet*30.5) + (inches*2.5),
player_age = (today() - mdy(playerbirthdate))/365 )
nfl_play_raw %>%
separate(playerheight, c('feet','inches'), '-', convert = T) %>%
mutate(playerheight_cm = (feet*30.5) + (inches*2.5),
player_age = as.Date((today() - mdy(playerbirthdate))/365) )
nfl_play_raw %>%
separate(playerheight, c('feet','inches'), '-', convert = T) %>%
mutate(playerheight_cm = (feet*30.5) + (inches*2.5),
player_age = as.Date(playerbirthdate))
parse_date()
?parse_date
nfl_play_raw %>%
separate(playerheight, c('feet','inches'), '-', convert = T) %>%
mutate(playerheight_cm = (feet*30.5) + (inches*2.5),
player_age = parse_date(playerbirthdate,format="%m/%d/%Y"))
colnames(nfl_play_raw)
nfl_play_raw %>%
separate(playerheight, c('feet','inches'), '-', convert = T) %>%
mutate(playerheight_cm = (feet*30.5) + (inches*2.5),
player_age = parse_date(playerbirthdate,format="%m/%d/%Y"))
season
nfl_play_raw$season
nfl_play_raw %>%
separate(playerheight, c('feet','inches'), '-', convert = T) %>%
mutate(playerheight_cm = (feet*30.5) + (inches*2.5),
player_age = parse_date(playerbirthdate,format="%m/%d/%Y"))
str_remove("%d%d%d%%d-", nfl_play_raw$playerbirthdate)
str_remove("d/d/d/d-", nfl_play_raw$playerbirthdate)
str_remove("\d{4}", nfl_play_raw$playerbirthdate)
str_remove("d{4}", nfl_play_raw$playerbirthdate)
str_replace(nfl_play_raw$playerbirthdate, "d{4}",replacement = '')
str_replace(nfl_play_raw$playerbirthdate, "%d/%d/%d/%d-",replacement = '')
str_replace(nfl_play_raw$playerbirthdate, "%d/%d/%d/%d",replacement = '')
str_replace(nfl_play_raw$playerbirthdate, "/%d/%d/%d/%d",replacement = '')
str_replace(nfl_play_raw$playerbirthdate, "/d/d/d/d",replacement = '')
str_replace(nfl_play_raw$playerbirthdate, "\\s\\d{4}\\s"",replacement = '')
colnames(nfl_play_raw)
"timehandoff"
"timesnap"
"gameclock"
X <- nfl_play_raw %>%
mutate(team = ifelse(position %in% c('SS','FS','CB','DB','ILB','OLB','DL','DE','DT','LB','NT','S','SAF'), 'defence','offence'),
own_half = possessionteam == fieldposition) %>%
group_by(gameid, playid, team) %>%
summarise(mean_x = mean(x),
mean_y = mean(y),
mean_s = mean(s),
mean_a = mean(a),
mean_dis = mean(dis),
mean_orientation = mean(orientation),
mean_dir = mean(dir),
down = min(down),
distance =  min(distance),
homescorebeforeplay = min(homescorebeforeplay),
visitorscorebeforeplay = min(visitorscorebeforeplay),
own_half = min(own_half),
defendersinthebox = min(defendersinthebox),
mean_weight = mean(playerweight),
week  = min(week),
temperature = min(temperature),
windspeed = min(windspeed),
humidity = min(humidity)) %>%
gather(key, value)
str_replace(nfl_play_raw$playerbirthdate, "\\s\\d{4}\\s",replacement = '')
str_remove(nfl_play_raw$playerbirthdate, "\\s\\d{4}\\s",replacement = '')
str_remove(nfl_play_raw$playerbirthdate, "\\s\\d{4}\\s")
str_remove(nfl_play_raw$playerbirthdate,'\\d\\d\\d\\d')
str_remove(nfl_play_raw$playerbirthdate,'\\\\\d\\d\\d\\d')
str_remove(nfl_play_raw$playerbirthdate,'\\d\\d\\d\\d')
str_remove(nfl_play_raw$playerbirthdate,'\\\\d\\d\\d\\d')
str_remove(nfl_play_raw$playerbirthdate,'\\\\\\d\\d\\d\\d')
str_remove(nfl_play_raw$playerbirthdate,'\\d\\d\\d\\d')
str_remove(nfl_play_raw$playerbirthdate,'\\/\\d\\d\\d\\d')
glue(str_remove(playerbirthdate,'\\d\\d\\d\\d'),
nfl_play_raw %>%
glue(str_remove(playerbirthdate,'\\d\\d\\d\\d'), season)
library(glue)
nfl_play_raw %>%
glue(str_remove(playerbirthdate,'\\d\\d\\d\\d'), season)
nfl_play_raw %>%
glue(str_remove(playerbirthdate,'\\d\\d\\d\\d'), season)
?glue
glue
nfl_play_raw %>%
glue(str_remove({playerbirthdate},'\\d\\d\\d\\d'), {season})
nfl_play_raw %>%
glue_data(str_remove({playerbirthdate},'\\d\\d\\d\\d'), {season})
nfl_play_raw %>% glue_data("str_remove({playerbirthdate},'\\d\\d\\d\\d'), {season}")
nfl_play_raw %>% paste0(str_remove(playerbirthdate),'\\d\\d\\d\\d'), season)
nfl_play_raw %>% paste0((str_remove(playerbirthdate),'\\d\\d\\d\\d')), season)
?separate()
nfl_play_raw %>% unite((str_remove(playerbirthdate),'\\d\\d\\d\\d')), season)
nfl_play_raw %>%
separate(playerheight, c('feet','inches'), '-', convert = T) %>%
mutate(playerheight_cm = (feet*30.5) + (inches*2.5),
player_age = parse_date(playerbirthdate,format="%m/%d/%Y"))
nfl_play_raw %>%
separate(playerheight, c('feet','inches'), '-', convert = T) %>%
mutate(playerheight_cm = (feet*30.5) + (inches*2.5),
player_age = parse_date(playerbirthdate,format="%m/%d/%Y"),
game_age = str_remove(player_age, '\\d\\d\\d\\d'))
?unite
nfl_play_raw %>%
separate(playerheight, c('feet','inches'), '-', convert = T) %>%
mutate(playerheight_cm = (feet*30.5) + (inches*2.5),
player_age = parse_date(playerbirthdate,format="%m/%d/%Y"),
game_age = str_remove(player_age, '\\d\\d\\d\\d')) %>%
unite(game_day_age, c('season','game_age'))
nfl_play_raw %>%
separate(playerheight, c('feet','inches'), '-', convert = T) %>%
mutate(playerheight_cm = (feet*30.5) + (inches*2.5),
player_age = parse_date(playerbirthdate,format="%m/%d/%Y"),
game_age = str_remove(player_age, '\\d\\d\\d\\d')) %>%
unite(game_day_age, c('season','game_age')) %>% View()
nfl_play_raw %>%
separate(playerheight, c('feet','inches'), '-', convert = T) %>%
mutate(playerheight_cm = (feet*30.5) + (inches*2.5),
player_age = parse_date(playerbirthdate,format="%m/%d/%Y"),
game_age = str_remove(player_age, '\\d\\d\\d\\d')) %>%
unite("game_day_age", c(season,game_age)) %>% View()
nfl_play_raw %>%
separate(playerheight, c('feet','inches'), '-', convert = T) %>%
mutate(playerheight_cm = (feet*30.5) + (inches*2.5),
player_dob = parse_date(playerbirthdate,format="%m/%d/%Y"),
game_dob = str_remove(player_dob, '\\d\\d\\d\\d')) %>%
unite("game_day_age", c(season,game_dob), convert =T)
nfl_play_raw %>%
separate(playerheight, c('feet','inches'), '-', convert = T) %>%
mutate(playerheight_cm = (feet*30.5) + (inches*2.5),
player_dob = parse_date(playerbirthdate,format="%m/%d/%Y"),
game_dob = str_remove(player_dob, '\\d\\d\\d\\d')) %>%
unite("game_day_age", c(season,game_dob)) %>%
mutate(player_age = game_day_age - play_dob )
nfl_play_raw %>%
separate(playerheight, c('feet','inches'), '-', convert = T) %>%
mutate(playerheight_cm = (feet*30.5) + (inches*2.5),
player_dob = parse_date(playerbirthdate,format="%m/%d/%Y"),
game_dob = str_remove(player_dob, '\\d\\d\\d\\d')) %>%
unite("game_day_age", c(season,game_dob), remove = F) %>%
mutate(player_age = game_day_age - play_dob )
nfl_play_raw %>%
separate(playerheight, c('feet','inches'), '-', convert = T) %>%
mutate(playerheight_cm = (feet*30.5) + (inches*2.5),
player_dob = parse_date(playerbirthdate,format="%m/%d/%Y"),
game_dob = str_remove(player_dob, '\\d\\d\\d\\d')) %>%
unite("game_day_age", c(season,game_dob), remove = F) %>%
mutate(player_age = game_day_age - playER_dob )
nfl_play_raw %>%
separate(playerheight, c('feet','inches'), '-', convert = T) %>%
mutate(playerheight_cm = (feet*30.5) + (inches*2.5),
player_dob = parse_date(playerbirthdate,format="%m/%d/%Y"),
game_dob = str_remove(player_dob, '\\d\\d\\d\\d')) %>%
unite("game_day_age", c(season,game_dob), remove = F) %>%
mutate(player_age = game_day_age - player_dob )
nfl_play_raw %>%
separate(playerheight, c('feet','inches'), '-', convert = T) %>%
mutate(playerheight_cm = (feet*30.5) + (inches*2.5),
player_dob = parse_date(playerbirthdate,format="%m/%d/%Y"),
game_dob = str_remove(player_dob, '\\d\\d\\d\\d')) %>%
unite("game_day_age", c(season,game_dob), remove = F) %>%
mutate(player_age = as.Date(game_day_age) - as.Date(player_dob))
nfl_play_raw %>%
separate(playerheight, c('feet','inches'), '-', convert = T) %>%
mutate(playerheight_cm = (feet*30.5) + (inches*2.5),
player_dob = parse_date(playerbirthdate,format="%m/%d/%Y"),
game_dob = str_remove(player_dob, '\\d\\d\\d\\d')) %>%
unite("game_day_age", c(season,game_dob), remove = F) %>%
mutate(player_age = as.Date(game_day_age, format="%m/%d/%Y") - as.Date(player_dob, format="%m/%d/%Y"))
nfl_play_raw %>%
separate(playerheight, c('feet','inches'), '-', convert = T) %>%
mutate(playerheight_cm = (feet*30.5) + (inches*2.5),
player_dob = parse_date(playerbirthdate,format="%m/%d/%Y"),
game_dob = str_remove(player_dob, '\\d\\d\\d\\d')) %>%
unite("game_day_age", c(season,game_dob), remove = F) %>%
mutate(player_age = as.Date(game_day_age, format="%m/%d/%Y") - as.Date(player_dob, format="%Y/%m/%d"))
nfl_play_raw %>%
separate(playerheight, c('feet','inches'), '-', convert = T) %>%
mutate(playerheight_cm = (feet*30.5) + (inches*2.5),
player_dob = parse_date(playerbirthdate,format="%m/%d/%Y"),
game_dob = str_remove(player_dob, '\\d\\d\\d\\d')) %>%
unite("game_day_age", c(season,game_dob),sep='', remove = F) %>%
mutate(player_age = as.Date(game_day_age, format="%m/%d/%Y") - as.Date(player_dob, format="%Y/%m/%d"))
nfl_play_raw %>%
separate(playerheight, c('feet','inches'), '-', convert = T) %>%
mutate(playerheight_cm = (feet*30.5) + (inches*2.5),
player_dob = parse_date(playerbirthdate,format="%m/%d/%Y"),
game_dob = str_remove(player_dob, '\\d\\d\\d\\d')) %>%
unite("game_day_age", c(season,game_dob),sep='', remove = F) %>%
mutate(player_age = as.Date(game_day_age, format="%Y/%m/%d") - as.Date(player_dob, format="%Y/%m/%d"))
# Load data into memory
nfl_play_raw <- dbGetQuery(conn, "select * from nfl_data", )
# Load data into memory
nfl_play_raw <- dbGetQuery(conn, "select * from nfl_data")
View(nfl_play_raw)
# Tidy date columns
nfl_data <- nfl_play_raw %>%
mutate(playerbirthdate = mdy(playerbirthdate))
for (col in colnames(nfl_data)) {
if (all(grepl('^[0-9]*$', nfl_data[, col])) == TRUE) {
class(nfl_data[, col]) <- 'numeric'
}
}
summary(nfl_data)
# Load data into memory
nfl_play_raw <- dbGetQuery(conn, "select * from nfl_data")
# Tidy date columns
nfl_data <- nfl_play_raw %>%
mutate(playerbirthdate = mdy(playerbirthdate))
# Tidy columns into numerics where they don't contain any characters
for (col in colnames(nfl_data)) {
if (all(grepl('(?<=^| )\d+(\.\d+)?(?=$| )', nfl_data[, col])) == TRUE) {
class(nfl_data[, col]) <- 'numeric'
}
}
for (col in colnames(nfl_data)) {
if (all(grepl('\d*\.\d*', nfl_data[, col])) == TRUE) {
class(nfl_data[, col]) <- 'numeric'
}
}
grepl('\d*\.\d*', nfl_data[, col])
for (col in colnames(nfl_data)) {
if (all(grepl('/d*/./d*', nfl_data[, col])) == TRUE) {
class(nfl_data[, col]) <- 'numeric'
}
}
summary(nfl_data)
for (col in colnames(nfl_data)) {
if (all(grepl('[0-9]', nfl_data[, col])) == TRUE) {
class(nfl_data[, col]) <- 'numeric'
}
}
for (col in colnames(nfl_data)) {
if (all(grepl('[-+]?[0-9]*\.?[0-9]+', nfl_data[, col])) == TRUE) {
class(nfl_data[, col]) <- 'numeric'
}
}
for (col in colnames(nfl_data)) {
if (all(grepl('[-+]?[0-9]*\.?[0-9]+', nfl_data[, col])) == TRUE) {
class(nfl_data[, col]) <- 'numeric'
}
}
for (col in colnames(nfl_data)) {
if (all(grepl('[-+]?[0-9]*/.?[0-9]+', nfl_data[, col])) == TRUE) {
class(nfl_data[, col]) <- 'numeric'
}
}
summary(nfl_data)
mean(nfl_play_raw$windspeed)
mean(nfl_play_raw$windspeed, na.rm=T)
mean(as.numeric(nfl_play_raw$windspeed))
View(nfl_play_raw)
########################################### NFL Data Bowl Script #############################################
# Set Up  -------------------------------------------------------------
library(RPostgreSQL)
library(tidyverse)
library(getPass)
library(lubridate)
library(glue)
# Set up connection to postgres
drv <- dbDriver('PostgreSQL')
conn <- dbConnect(drv,
host='localhost',
user='postgres',
password=getPass(),
dbname='nfl_data_bowl')
# Load data into memory
nfl_play_raw <- dbGetQuery(conn, "select * from nfl_data")
# Build Feature Vector ----------------------------------------------------
# BTransform first features
nfl_data <- nfl_play_raw %>%
transmute(
gameid,
playid,
team,
playerbirthdate = mdy(playerbirthdate),
age_at_game = round(as.numeric(as.Date(glue('{season}{str_sub(playerbirthdate,5)}'))-playerbirthdate)/365),
time_remaining = case_when(
quarter == '1' ~ 2700 + as.numeric(str_sub(gameclock,1,2))*60 + as.numeric(str_sub(gameclock, 4,5)),
quarter =='2' ~ 1800 + as.numeric(str_sub(gameclock,1,2))*60 + as.numeric(str_sub(gameclock, 4,5)),
quarter =='3' ~ 900 + as.numeric(str_sub(gameclock,1,2))*60 + as.numeric(str_sub(gameclock, 4,5)),
quarter =='4' ~ as.numeric(str_sub(gameclock,1,2))*60 + as.numeric(str_sub(gameclock, 4,5))),
yards_per_play_for_first_down = case_when(
down == '1' ~ as.numeric(distance) / 4,
down =='2' ~ as.numeric(distance) / 3,
down =='3' ~ as.numeric(distance) / 2,
down =='4' ~ as.numeric(distance)/1),
x_position = as.numeric(x),
y_position = as.numeric(y),
s_position = as.numeric(s),
a_position = as.numeric(a),
dis_position = as.numeric(dis),
orientation_position = as.numeric(orientation),
dir_position = as.numeric(dir),
defendersinthebox = as.numeric(defendersinthebox),
playerweight = as.numeric(playerweight),
playerheight = (as.numeric(str_sub(playerheight,1,1))*30.5) + (as.numeric(substr(playerheight, 3, length(playerheight))) * 2.5),
yards) %>%
group_by(gameid, playid) %>%
summarise(avg_age = mean(age_at_game),
time_remaining = min(time_remaining),
yards_per_play_for_first_down = min(yards_per_play_for_first_down),
x_position = mean(x_position),
y_position = mean(y_position),
s_position = mean(s_position),
a_position = mean(a_position),
dis_position = mean(dis_position),
orientation_position = mean(orientation_position),
dir_position = mean(dir_position),
defendersinthebox = min(defendersinthebox),
playerweight = mean(playerweight),
playerheight = mean(playerheight),
yards = min(yards))
ind <- sample(c(1:dim(nfl_data)[1]), 5000)
test <- nfl_data[ind, ]
training <- nfl_data[-ind, ]
library(yaml)
# Load in config file
config <- read_yaml("src/config.yaml")
getwd()
library(here)
here
here()
setwd("~/Documents/Git/nfl_data_bowl")
